name: build-command
on:
  workflow_dispatch:
    # checkov:skip=CKV_GHA_7:We are only triggering these workflows by users with write access manually, it is expected.
    # Error was:
    # The build output cannot be affected by user parameters other than the build entry point and the top-level source location.
    # GitHub Actions workflow_dispatch inputs MUST be empty.
    inputs:
      repository:
        description: "The repository from which the slash command was dispatched"
        required: true
      comment-id:
        description: "The comment-id of the slash command"
        required: true
      issue-number:
        description: "The issue number in which the slash command was made"
        required: true
      actor:
        description: "The user who executed the slash command"
        required: true
      checkout-ref:
        description: "The reference to pass to 'ref' to checkout action"
        required: true
      checkout-repository:
        description: "The repository to pass to 'repository' to tcheckout action"
        required: false
  repository_dispatch:
    types: [build-command]
jobs:
  build-sh:
    runs-on: ubuntu-latest
    steps:
      - name: Create URL to the run output
        id: vars
        run: echo "run-url=https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" >> $GITHUB_OUTPUT
      - name: Create comment
        uses: peter-evans/create-or-update-comment@v3
        with:
          ## Use token if we want to use a PAT instead of GITHUB_TOKEN, GITHUB_TOKEN acts as github-actions[bot]
          # token: ${{ secrets.PAT }}
          repository: ${{ github.event.inputs.repository }}
          comment-id: ${{ github.event.inputs.comment-id }}
          issue-number: ${{ github.event.inputs.issue-number }}
          ## These are if we want to use repository_dispatch (default)
          # repository: ${{ github.event.client_payload.github.payload.repository.full_name }}
          # comment-id: ${{ github.event.client_payload.github.payload.comment.id }}
          # issue-number: ${{ github.event.client_payload.github.payload.issue.number }}
          body: |
            > [Command run output](${{ steps.vars.outputs.run-url }})
            > Build command workflow started.
            > Installing dependencies
      - name: Dump the client payload context
        env:
          PAYLOAD_CONTEXT: ${{ toJson(github.event.client_payload) }}
        run: echo "$PAYLOAD_CONTEXT"
      - name: Dump the inputs payload context
        env:
          INPUTS_CONTEXT: ${{ toJson(github.event.inputs) }}
        run: echo "$INPUTS_CONTEXT"
      # Checkout the pull request branch
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}
          repository: ${{ github.event.inputs.checkout-repository }}
          ref: ${{ github.event.inputs.checkout-ref }}
      - name: Setup Python
        uses: actions/setup-python@v4.6.0
        with:
          # Version range or exact version of Python or PyPy to use, using SemVer's version range syntax. Reads from .python-version if unset.
          python-version: 3.11.3 # optional
          # Used to specify a package manager for caching in the default directory. Supported values: pip, pipenv, poetry.
          cache: pip # optional
      - run: pip install -r requirements.dev.txt
      - name: Create comment starting build.sh
        uses: peter-evans/create-or-update-comment@v3
        with:
          ## Use token if we want to use a PAT instead of GITHUB_TOKEN, GITHUB_TOKEN acts as github-actions[bot]
          # token: ${{ secrets.PAT }}
          repository: ${{ github.event.inputs.repository }}
          comment-id: ${{ github.event.inputs.comment-id }}
          issue-number: ${{ github.event.inputs.issue-number }}
          body: |
            > Running script `./build.sh`
      - name: Run build script
        run: ./build.sh
      - uses: stefanzweifel/git-auto-commit-action@v4
        id: auto-commit-action
        with:
          commit_message: "[build-command] Update generated files"
          commit_user_name: megalinter-bot
          commit_user_email: nicolas.vuillamy@ox.security
      - name: Add reaction
        uses: peter-evans/create-or-update-comment@v3
        with:
          ## Use token if we want to use a PAT instead of GITHUB_TOKEN, GITHUB_TOKEN acts as github-actions[bot]
          # token: ${{ secrets.PAT }}
          repository: ${{ github.event.inputs.repository }}
          comment-id: ${{ github.event.inputs.comment-id }}
          issue-number: ${{ github.event.inputs.issue-number }}
          reaction-type: hooray
      - name: Create final comment updated files
        if: steps.auto-commit-action.outputs.changes_detected == 'true'
        uses: peter-evans/create-or-update-comment@v3
        with:
          ## Use token if we want to use a PAT instead of GITHUB_TOKEN, GITHUB_TOKEN acts as github-actions[bot]
          # token: ${{ secrets.PAT }}
          repository: ${{ github.event.inputs.repository }}
          comment-id: ${{ github.event.inputs.comment-id }}
          issue-number: ${{ github.event.inputs.issue-number }}
          body: |
            > Build command workflow completed updating files.
      - name: Create final comment no updated files
        if: steps.auto-commit-action.outputs.changes_detected == 'false'
        uses: peter-evans/create-or-update-comment@v3
        with:
          ## Use token if we want to use a PAT instead of GITHUB_TOKEN, GITHUB_TOKEN acts as github-actions[bot]
          # token: ${{ secrets.PAT }}
          repository: ${{ github.event.inputs.repository }}
          comment-id: ${{ github.event.inputs.comment-id }}
          issue-number: ${{ github.event.inputs.issue-number }}
          body: |
            > Build command workflow completed without updating files.
